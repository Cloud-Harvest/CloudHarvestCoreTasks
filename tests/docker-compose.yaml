services:
  mongo:                            # The second service is MongoDB
    image: mongo                    # The Docker image to use for this service
    container_name: core-tasks-mongo # The name of the container
    restart: always                 # Specifies the restart policy
    ports:                          # Maps the port inside the Docker container to the host
      - "44444:27017"
    command: >                      # The command to run inside the container 
      /bin/bash -c "
        docker-entrypoint.sh --bind_ip_all --logappend
      "
    networks:                       # Specifies the networks the container should connect to
      - CloudHarvestCoreTasksTestNetwork
    environment:                     # Add environment variables
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-admin}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-default-harvest-password}"
      HTTPS_PROXY: "${HTTPS_PROXY}"
      NO_PROXY: "${NO_PROXY}"

  redis:
    image: redis:latest
    container_name: core-tasks-redis
    restart: always
    ports:
      - "44445:6379"
    networks:
      - CloudHarvestCoreTasksTestNetwork
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD:-default-harvest-password}"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-default-harvest-password}", "--maxmemory", "256mb"]

networks:                           # Defines the networks to be used by the services
  CloudHarvestCoreTasksTestNetwork:                  # The name of the network
    driver: bridge                  # The network driver to be used